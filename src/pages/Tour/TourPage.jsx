import React, { useState, useEffect } from "react"
import { useParams, Link, useNavigate } from "react-router-dom"
import Header from "../../common-ui/Header"
import Footer from "../../common-ui/Footer"
import * as TourService from "../../services/TourService"
import * as AuthService from "../../services/AuthService"
import "./TourPage.css"

const TourPage = () => {
  const { id } = useParams()
  const navigate = useNavigate()
  const [tour, setTour] = useState(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)
  const [isAuthenticated, setIsAuthenticated] = useState(false)

  useEffect(() => {
    const fetchTour = async () => {
      try {
        setLoading(true)
        const tourData = await TourService.getTourById(id)
        setTour(tourData)
        setLoading(false)
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç—É—Ä–∞:", err)
        setError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—É—Ä–µ")
        setLoading(false)
      }
    }

    const checkAuth = async () => {
      setIsAuthenticated(AuthService.isAuthenticated())
    }

    fetchTour()
    checkAuth()
  }, [id])

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç
  const formatDate = dateString => {
    if (!dateString) return ""
    const date = new Date(dateString)
    return date.toLocaleDateString("ru-RU")
  }

  // –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ç—É—Ä–∞
  const calculateDuration = (start, end) => {
    if (!start || !end) return 0
    const startDate = new Date(start)
    const endDate = new Date(end)
    return Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24))
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å–µ–∑–æ–Ω–∞
  const getSeasonText = season => {
    if (!season) return "–ù–µ —É–∫–∞–∑–∞–Ω"

    switch (season) {
      case "WINTER":
        return "–ó–∏–º–∞"
      case "SPRING":
        return "–í–µ—Å–Ω–∞"
      case "SUMMER":
        return "–õ–µ—Ç–æ"
      case "AUTUMN":
        return "–û—Å–µ–Ω—å"
      case "ALL_YEAR":
        return "–ö—Ä—É–≥–ª—ã–π –≥–æ–¥"
      default:
        return season
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ç–∏–ø–∞ —Ç—É—Ä–∞
  const getTourTypeText = type => {
    if (!type) return "–ù–µ —É–∫–∞–∑–∞–Ω"

    switch (type) {
      case "BEACH":
        return "–ü–ª—è–∂–Ω—ã–π"
      case "EXCURSION":
        return "–≠–∫—Å–∫—É—Ä—Å–∏–æ–Ω–Ω—ã–π"
      case "ADVENTURE":
        return "–ü—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–∏–π"
      case "SKIING":
        return "–ì–æ—Ä–Ω–æ–ª—ã–∂–Ω—ã–π"
      case "CRUISE":
        return "–ö—Ä—É–∏–∑"
      case "CULTURAL":
        return "–ö—É–ª—å—Ç—É—Ä–Ω—ã–π"
      case "MEDICAL":
        return "–û–∑–¥–æ—Ä–æ–≤–∏—Ç–µ–ª—å–Ω—ã–π"
      case "EDUCATIONAL":
        return "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π"
      default:
        return type
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–∫–ª–æ–Ω–µ–Ω–∏—è —Å–ª–æ–≤–∞ "–¥–Ω–µ–π"
  const getDurationText = duration => {
    const lastDigit = duration % 10
    const lastTwoDigits = duration % 100

    if (lastTwoDigits >= 11 && lastTwoDigits <= 19) {
      return "–¥–Ω–µ–π"
    }

    if (lastDigit === 1) {
      return "–¥–µ–Ω—å"
    }

    if (lastDigit >= 2 && lastDigit <= 4) {
      return "–¥–Ω—è"
    }

    return "–¥–Ω–µ–π"
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (URL –∏–ª–∏ base64)
  const getImageSource = () => {
    if (!tour) return "/placeholder-tour.jpg"

    if (tour.imagePath) {
      return tour.imagePath
    } else if (tour.imageData) {
      // –ï—Å–ª–∏ –µ—Å—Ç—å base64 –¥–∞–Ω–Ω—ã–µ, —Ñ–æ—Ä–º–∏—Ä—É–µ–º data URL
      return `data:${tour.imageType || "image/jpeg"};base64,${tour.imageData}`
    }
    return "/placeholder-tour.jpg"
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ç—É—Ä–∞
  const isSoldOut = tour?.availableSlots === 0
  const isRegistrationEnded = () => {
    if (!tour) return false
    const today = new Date()
    const tourStartDate = new Date(tour.startDate)
    return (
      tour.isRegistrationClosed ||
      (new Date(tourStartDate).setHours(0, 0, 0, 0) -
        new Date(today).setHours(0, 0, 0, 0)) /
        (1000 * 60 * 60 * 24) <=
        1
    )
  }

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
  const formatPrice = price => {
    if (!price) return ""
    return new Intl.NumberFormat("ru-RU", {
      style: "currency",
      currency: "BYN",
      maximumFractionDigits: 0,
    }).format(price)
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"
  const handleApply = () => {
    navigate(`/application?tourId=${id}`)
  }

  if (loading) {
    return (
      <div className="tour-page">
        <Header />
        <main className="tour-main">
          <div className="container">
            <div className="loading-container">
              <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç—É—Ä–µ...</div>
            </div>
          </div>
        </main>
        <Footer />
      </div>
    )
  }

  if (error || !tour) {
    return (
      <div className="tour-page">
        <Header />
        <main className="tour-main">
          <div className="container">
            <div className="error-container">
              <div className="error">{error || "–¢—É—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"}</div>
              <Link to="/" className="back-link">
                –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
              </Link>
            </div>
          </div>
        </main>
        <Footer />
      </div>
    )
  }

  const duration = calculateDuration(tour.startDate, tour.endDate)

  return (
    <div className="tour-page">
      <Header />

      <main className="tour-main">
        <div className="container">
          <div className="tour-header">
            <h1 className="tour-title">{tour.name}</h1>
            <div className="tour-meta">
              <span className="tour-country">{tour.country}</span>
              <span className="tour-season">{getSeasonText(tour.season)}</span>
              <span className="tour-type">{getTourTypeText(tour.type)}</span>
            </div>
          </div>

          <div className="tour-content">
            <div className="tour-image-container">
              <img
                src={getImageSource()}
                alt={tour.name}
                className="tour-image"
              />

              {isSoldOut && (
                <div className="tour-status sold-out">–†–∞—Å–ø—Ä–æ–¥–∞–Ω–æ</div>
              )}
              {isRegistrationEnded() && !isSoldOut && (
                <div className="tour-status closed">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∞</div>
              )}
            </div>

            <div className="tour-info-container">
              <div className="tour-info-block">
                <h3>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—É—Ä–µ</h3>
                <div className="tour-info-grid">
                  <div className="info-group">
                    <span className="info-label">–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞:</span>
                    <span className="info-value">
                      {formatDate(tour.startDate)}
                    </span>
                  </div>
                  <div className="info-group">
                    <span className="info-label">–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è:</span>
                    <span className="info-value">
                      {formatDate(tour.endDate)}
                    </span>
                  </div>
                  <div className="info-group">
                    <span className="info-label">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</span>
                    <span className="info-value">
                      {duration} {getDurationText(duration)}
                    </span>
                  </div>
                  <div className="info-group">
                    <span className="info-label">–°–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç:</span>
                    <span className="info-value">
                      {tour.availableSlots}/{tour.totalSlots}
                    </span>
                  </div>
                  {tour.price && (
                    <div className="info-group">
                      <span className="info-label">–¶–µ–Ω–∞:</span>
                      <span className="info-value price">
                        {formatPrice(tour.price)}
                      </span>
                    </div>
                  )}
                </div>

                {!isSoldOut && !isRegistrationEnded() && (
                  <button className="apply-button" onClick={handleApply}>
                    –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
                  </button>
                )}
                {!isAuthenticated && !isSoldOut && !isRegistrationEnded() && (
                  <div className="auth-hint">
                    <Link to="/login" className="auth-link">
                      –í–æ–π—Ç–∏
                    </Link>{" "}
                    –∏–ª–∏{" "}
                    <Link to="/register" className="auth-link">
                      –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                    </Link>
                  </div>
                )}
              </div>
            </div>

            <div className="tour-description-container">
              <h3>–û–ø–∏—Å–∞–Ω–∏–µ —Ç—É—Ä–∞</h3>
              <div className="tour-description">{tour.description}</div>
            </div>

            {tour.fileName && tour.fileData && (
              <div className="tour-files-container">
                <h3>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</h3>
                <div className="tour-files">
                  <a
                    href={`data:${tour.fileType || "application/pdf"};base64,${
                      tour.fileData
                    }`}
                    download={tour.fileName}
                    className="tour-file-link"
                  >
                    <i className="file-icon">üìÑ</i>
                    <span>{tour.fileName}</span>
                  </a>
                </div>
              </div>
            )}
          </div>

          <div className="tour-footer">
            <Link to="/" className="back-button">
              –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Ç—É—Ä–æ–≤
            </Link>
          </div>
        </div>
      </main>

      <Footer />
    </div>
  )
}

export default TourPage
